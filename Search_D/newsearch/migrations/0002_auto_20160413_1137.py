# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('newsearch', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminFunctions',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('title', models.CharField(max_length=255)),
                ('action_name', models.CharField(blank=True, max_length=255, null=True)),
                ('controller_name', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_id', models.IntegerField()),
                ('is_menu', models.IntegerField()),
            ],
            options={
                'db_table': 'admin_functions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
                ('auth_key', models.CharField(blank=True, max_length=255, null=True)),
                ('created_date', models.DateTimeField()),
                ('last_login', models.DateTimeField()),
            ],
            options={
                'db_table': 'admin_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('attribute_id', models.IntegerField()),
                ('attribute_type', models.CharField(blank=True, max_length=45, null=True)),
                ('attribute_code', models.CharField(blank=True, max_length=45, null=True)),
                ('attribute_name', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.SmallIntegerField()),
                ('is_searchable', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttributesData',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('base_product_id', models.IntegerField()),
                ('subscribed_product_id', models.IntegerField()),
                ('category_id', models.IntegerField()),
                ('variant', models.CharField(blank=True, max_length=255, null=True)),
                ('variant_value', models.CharField(blank=True, max_length=255, null=True)),
                ('key_features', models.TextField(blank=True, null=True)),
                ('specifications', models.TextField(blank=True, null=True)),
                ('uom1', models.CharField(blank=True, max_length=255, null=True)),
                ('uom2', models.CharField(blank=True, max_length=255, null=True)),
                ('combo', models.TextField(blank=True, null=True)),
                ('model_number', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'attributes_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('name', models.CharField(unique=True, max_length=80)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(unique=True, max_length=30)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseProduct',
            fields=[
                ('base_product_id', models.AutoField(serialize=False, primary_key=True)),
                ('title', models.CharField(max_length=255)),
                ('small_description', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('unit_of_measurement_one', models.CharField(blank=True, max_length=150, null=True)),
                ('model_number', models.CharField(blank=True, max_length=255, null=True)),
                ('key_features', models.TextField(blank=True, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=150, null=True)),
                ('meta_keyword', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=150, null=True)),
                ('status', models.IntegerField()),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('video_url', models.CharField(blank=True, max_length=255, null=True)),
                ('brand_id', models.IntegerField()),
                ('unit_of_measurement_two', models.CharField(blank=True, max_length=150, null=True)),
                ('is_no_follow', models.IntegerField(blank=True, null=True)),
                ('thumb_url', models.CharField(blank=True, max_length=500, null=True)),
                ('base_ref_id', models.CharField(blank=True, max_length=10, null=True)),
                ('slug', models.TextField(blank=True, null=True)),
                ('default_category', models.IntegerField()),
                ('combo_categories', models.CharField(blank=True, max_length=255, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('is_installation_required', models.IntegerField()),
                ('installation_amount', models.DecimalField(blank=True, max_digits=12, decimal_places=2, null=True)),
                ('installation_moq', models.IntegerField(blank=True, null=True)),
                ('installation_unit_of_measurement', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_text', models.TextField(blank=True, null=True)),
                ('extra_material_required', models.IntegerField()),
                ('extra_material_price', models.DecimalField(blank=True, max_digits=12, decimal_places=4, null=True)),
                ('business_unit', models.TextField(blank=True, null=True)),
                ('sub_category', models.CharField(blank=True, max_length=255, null=True)),
                ('brand_type', models.CharField(blank=True, max_length=255, null=True)),
                ('standard_packing_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('unit_quantity_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('purchase_price_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('installation_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('installation_with_material_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('classifications', models.CharField(blank=True, max_length=255, null=True)),
                ('categoryids', models.TextField(blank=True, null=True)),
                ('sub_sub_category', models.CharField(blank=True, max_length=255, null=True)),
                ('video_link', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'base_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('store_front_id', models.AutoField(serialize=False, primary_key=True)),
                ('store_front_name', models.CharField(blank=True, max_length=255, null=True)),
                ('store_front_api_key', models.CharField(blank=True, max_length=100, null=True)),
                ('store_front_api_password', models.CharField(blank=True, max_length=100, null=True)),
                ('store_front_api_token', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.SmallIntegerField()),
                ('parent_id', models.IntegerField()),
                ('tagline', models.CharField(max_length=255)),
                ('is_tagline', models.IntegerField()),
                ('redirect_url', models.TextField(blank=True, null=True)),
                ('seller_mailer_flag', models.IntegerField()),
                ('buyer_mailer_flag', models.IntegerField()),
                ('vendor_coupon_prefix', models.CharField(max_length=10)),
                ('order_prefix', models.CharField(max_length=11)),
            ],
            options={
                'db_table': 'brand',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CartValue',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('session_id', models.CharField(max_length=50)),
                ('user_id', models.IntegerField()),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('store_price', models.DecimalField(blank=True, max_digits=20, decimal_places=0, null=True)),
                ('store_offer_price', models.DecimalField(max_digits=20, decimal_places=0)),
                ('product_qty', models.IntegerField(blank=True, null=True)),
                ('total_price', models.DecimalField(max_digits=50, decimal_places=0)),
                ('added_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'cart_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(serialize=False, primary_key=True)),
                ('spli_category_id', models.IntegerField()),
                ('category_name', models.CharField(max_length=255)),
                ('parent_category_id', models.IntegerField()),
                ('level', models.IntegerField()),
                ('path', models.CharField(max_length=255)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.SmallIntegerField()),
                ('is_mega_category', models.SmallIntegerField()),
                ('category_shipping_charge', models.IntegerField()),
                ('status', models.IntegerField()),
                ('cat_tax_per', models.DecimalField(max_digits=5, decimal_places=2)),
                ('cat_banner_img', models.CharField(max_length=255)),
                ('cat_pro_img', models.CharField(max_length=255)),
                ('display_order', models.IntegerField(blank=True, null=True)),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('display_in_menu', models.IntegerField()),
                ('category_icon', models.CharField(blank=True, max_length=255, null=True)),
                ('category_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category2',
            fields=[
                ('category_id', models.AutoField(serialize=False, primary_key=True)),
                ('spli_category_id', models.IntegerField()),
                ('category_name', models.CharField(max_length=255)),
                ('parent_category_id', models.IntegerField()),
                ('level', models.IntegerField()),
                ('path', models.CharField(max_length=255)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.SmallIntegerField()),
                ('is_mega_category', models.SmallIntegerField()),
                ('category_shipping_charge', models.IntegerField()),
                ('status', models.IntegerField()),
                ('cat_tax_per', models.DecimalField(max_digits=5, decimal_places=2)),
            ],
            options={
                'db_table': 'category2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CatSolrBackLog',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('category_id', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'cat_solr_back_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(serialize=False, primary_key=True, max_length=40)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FilterProductMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('product_id', models.IntegerField()),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'filter_product_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Filters',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('subcategory_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('list_value', models.TextField()),
            ],
            options={
                'db_table': 'filters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Logging',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('log_id', models.IntegerField()),
                ('user_id', models.CharField(max_length=255)),
                ('entity', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('data', models.TextField()),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'logging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('media_id', models.AutoField(serialize=False, primary_key=True)),
                ('media_url', models.CharField(blank=True, max_length=255, null=True)),
                ('thumb_url', models.CharField(blank=True, max_length=255, null=True)),
                ('media_type', models.CharField(blank=True, max_length=45, null=True)),
                ('base_product_id', models.IntegerField()),
                ('variant_id', models.IntegerField()),
                ('is_default', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'media',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('email', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'newsletter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OldStorePriceMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('base_product_id', models.IntegerField()),
                ('subscribed_product_id', models.IntegerField(blank=True, null=True)),
                ('store_id', models.IntegerField()),
                ('store_price', models.DecimalField(max_digits=12, decimal_places=4)),
                ('store_offer_price', models.DecimalField(max_digits=12, decimal_places=4)),
                ('lead_time', models.IntegerField()),
                ('publish', models.IntegerField()),
                ('unit_price', models.DecimalField(max_digits=12, decimal_places=4)),
                ('secondary_store_price', models.DecimalField(max_digits=12, decimal_places=2)),
            ],
            options={
                'db_table': 'old_store__price_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderInvoice',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('order_number', models.CharField(max_length=255)),
                ('invoicenumber', models.IntegerField()),
            ],
            options={
                'db_table': 'order_invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PincodeMaster',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('pincode', models.CharField(blank=True, max_length=100, null=True)),
                ('district', models.CharField(blank=True, max_length=200, null=True)),
                ('region_id', models.IntegerField()),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('publish', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pincode_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pincodes',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('pincode', models.CharField(max_length=25)),
                ('district', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'pincodes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PopularProducts',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('mc_id', models.IntegerField()),
                ('sc_id', models.IntegerField()),
                ('base_product_id', models.IntegerField()),
                ('product_title', models.CharField(blank=True, max_length=255, null=True)),
                ('product_image', models.CharField(blank=True, max_length=255, null=True)),
                ('product_slug', models.TextField(blank=True, null=True)),
                ('store_price', models.DecimalField(blank=True, max_digits=12, decimal_places=4, null=True)),
                ('min_store_price', models.DecimalField(blank=True, max_digits=12, decimal_places=4, null=True)),
                ('store_id', models.IntegerField(blank=True, null=True)),
                ('publish', models.IntegerField()),
                ('unit_of_measurement_one', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'popular_products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('base_product_id', models.IntegerField()),
                ('attribute_id', models.IntegerField()),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'product_attribute_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCategoryMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('base_product_id', models.IntegerField()),
                ('category_id', models.IntegerField()),
                ('slug', models.CharField(blank=True, max_length=250, null=True)),
                ('base_ref_id', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'product_category_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductFrontendMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('subscribed_product_id', models.IntegerField()),
                ('store_front_id', models.IntegerField()),
            ],
            options={
                'db_table': 'product_frontend_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPincodeMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('store_id', models.IntegerField()),
                ('base_product_id', models.IntegerField()),
                ('store_offer_price', models.DecimalField(blank=True, max_digits=50, decimal_places=2, null=True)),
                ('subscribed_product_id', models.IntegerField(blank=True, null=True)),
                ('store_price', models.DecimalField(blank=True, max_digits=15, decimal_places=2, null=True)),
            ],
            options={
                'db_table': 'product_pincode_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPriceMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('base_product_id', models.IntegerField(blank=True, null=True)),
                ('subscribed_product_id', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, max_digits=15, decimal_places=2, null=True)),
                ('store_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_price_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductsAttributes',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('name', models.CharField(blank=True, unique=True, max_length=255, null=True)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ascii_ignd_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Products_attributes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductsCategoryattributesmapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('value_constraint', models.TextField(blank=True, null=True)),
                ('attr_type', models.CharField(blank=True, max_length=255, null=True)),
                ('is_mandatory', models.IntegerField()),
                ('is_spec', models.IntegerField()),
                ('is_varing', models.IntegerField()),
                ('is_filter', models.IntegerField()),
                ('is_dropdown', models.IntegerField()),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('for_base', models.IntegerField()),
                ('for_subscribed', models.IntegerField()),
                ('category_id', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('change_log_id', models.TextField(blank=True, null=True)),
                ('filter_sequence', models.IntegerField()),
            ],
            options={
                'db_table': 'Products_categoryattributesmapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductsProductcategoryattributesmapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('subscribed_ref_id', models.CharField(blank=True, max_length=20, null=True)),
                ('text_value', models.TextField(blank=True, null=True)),
                ('int_value', models.IntegerField(blank=True, null=True)),
                ('decimal_value', models.DecimalField(blank=True, max_digits=15, decimal_places=2, null=True)),
                ('category_attribute_id', models.IntegerField(blank=True, null=True)),
                ('subscribed_product_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Products_productcategoryattributesmapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductsProductcategoryattributesmappingfilters',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('subscribed_ref_id', models.CharField(blank=True, max_length=20, null=True)),
                ('text_value', models.CharField(blank=True, max_length=100, null=True)),
                ('int_value', models.IntegerField(blank=True, null=True)),
                ('decimal_value', models.DecimalField(blank=True, max_digits=15, decimal_places=2, null=True)),
                ('base_product_id', models.IntegerField(blank=True, null=True)),
                ('category_attribute_id', models.IntegerField(blank=True, null=True)),
                ('subscribed_product_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Products_productcategoryattributesmappingfilters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductsProducttaxmastermapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('base_product_id', models.IntegerField()),
            ],
            options={
                'db_table': 'Products_producttaxmastermapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTaxMasterMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('base_product_id', models.IntegerField()),
                ('category_id', models.IntegerField()),
            ],
            options={
                'db_table': 'product_tax_master_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuoteFormData',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('base_product_id', models.IntegerField()),
                ('subscribed_product_id', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(max_digits=12, decimal_places=2)),
                ('client_email_id', models.CharField(max_length=255)),
                ('quote_request_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'quote_form_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionMaster',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('name', models.CharField(max_length=255)),
                ('parent_region', models.CharField(blank=True, max_length=255, null=True)),
                ('region_id', models.CharField(max_length=255)),
                ('publish', models.IntegerField()),
            ],
            options={
                'db_table': 'region_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionMasterOld',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('name', models.CharField(max_length=255)),
                ('publish', models.IntegerField()),
                ('parent_region', models.CharField(blank=True, max_length=255, null=True)),
                ('region_id', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'region_master_old',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Responsibilities',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('user_id', models.IntegerField()),
                ('admin_func_id', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'responsibilities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SolrBackLog',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('subscribed_product_id', models.IntegerField()),
                ('is_deleted', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'solr_back_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SolrData',
            fields=[
                ('row_id', models.AutoField(serialize=False, primary_key=True)),
                ('id', models.CharField(max_length=11)),
                ('region_id', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('model_name', models.CharField(blank=True, max_length=255, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'solr_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SolrLogData',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('searched_keyword', models.TextField(blank=True, null=True)),
                ('searched_time', models.DateTimeField()),
                ('qtime', models.IntegerField()),
                ('responses', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'solr_log_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('store_id', models.AutoField(serialize=False, primary_key=True)),
                ('store_code', models.CharField(blank=True, max_length=255, null=True)),
                ('store_name', models.CharField(blank=True, max_length=255, null=True)),
                ('store_details', models.TextField(blank=True, null=True)),
                ('store_logo', models.CharField(blank=True, max_length=255, null=True)),
                ('seller_name', models.CharField(blank=True, max_length=255, null=True)),
                ('business_address', models.CharField(blank=True, max_length=300, null=True)),
                ('business_address_country', models.CharField(blank=True, max_length=100, null=True)),
                ('business_address_state', models.CharField(blank=True, max_length=100, null=True)),
                ('business_address_city', models.CharField(blank=True, max_length=100, null=True)),
                ('business_address_pincode', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_numbers', models.CharField(blank=True, max_length=100, null=True)),
                ('telephone_numbers', models.CharField(blank=True, max_length=100, null=True)),
                ('visible', models.SmallIntegerField()),
                ('meta_title', models.CharField(blank=True, max_length=150, null=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=150, null=True)),
                ('customer_value', models.DecimalField(max_digits=12, decimal_places=4)),
                ('chat_id', models.CharField(blank=True, max_length=45, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('tin', models.CharField(blank=True, max_length=255, null=True)),
                ('pan', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_persion_name', models.CharField(blank=True, max_length=255, null=True)),
                ('con_per_mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('con_per_email', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ac_number', models.CharField(blank=True, max_length=255, null=True)),
                ('branch_code', models.CharField(blank=True, max_length=255, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=255, null=True)),
                ('rtgs_code', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField()),
                ('vtiger_status', models.IntegerField()),
                ('vtiger_accountid', models.IntegerField()),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.SmallIntegerField()),
                ('tagline', models.CharField(blank=True, max_length=256, null=True)),
                ('is_tagline', models.IntegerField()),
                ('store_api_key', models.CharField(max_length=100)),
                ('store_api_password', models.CharField(max_length=100)),
                ('redirect_url', models.TextField(blank=True, null=True)),
                ('seller_mailer_flag', models.IntegerField()),
                ('buyer_mailer_flag', models.IntegerField()),
                ('channel_name', models.CharField(max_length=255)),
                ('channel_id', models.CharField(max_length=255)),
                ('order_prefix', models.CharField(max_length=11)),
                ('is_active_valid', models.IntegerField()),
                ('store_shipping_charge', models.IntegerField()),
                ('store_tax_per', models.FloatField()),
            ],
            options={
                'db_table': 'store',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StoreFront',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('store_front_id', models.IntegerField()),
                ('store_front_name', models.CharField(blank=True, max_length=255, null=True)),
                ('store_front_api_key', models.CharField(blank=True, max_length=100, null=True)),
                ('store_front_api_password', models.CharField(blank=True, max_length=100, null=True)),
                ('store_front_api_token', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.SmallIntegerField()),
                ('parent_id', models.IntegerField()),
                ('tagline', models.CharField(max_length=255)),
                ('is_tagline', models.IntegerField()),
                ('redirect_url', models.TextField(blank=True, null=True)),
                ('seller_mailer_flag', models.IntegerField()),
                ('buyer_mailer_flag', models.IntegerField()),
                ('vendor_coupon_prefix', models.CharField(max_length=10)),
                ('order_prefix', models.CharField(max_length=11)),
            ],
            options={
                'db_table': 'store_front',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorefrontFbpageMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('store_front_id', models.IntegerField()),
                ('page_id', models.CharField(max_length=40)),
                ('page_name', models.CharField(blank=True, max_length=255, null=True)),
                ('access_token', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(blank=True, null=True)),
                ('modify_on', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'storefront_fbpage_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorePriceMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('base_product_id', models.IntegerField()),
                ('subscribed_product_id', models.IntegerField(blank=True, null=True)),
                ('store_id', models.IntegerField()),
                ('store_price', models.DecimalField(max_digits=12, decimal_places=4)),
                ('store_offer_price', models.DecimalField(max_digits=12, decimal_places=4)),
                ('region_id', models.CharField(blank=True, max_length=255, null=True)),
                ('price_type', models.TextField(blank=True, null=True)),
                ('discount', models.DecimalField(max_digits=12, decimal_places=4)),
                ('purchase_price', models.DecimalField(max_digits=12, decimal_places=4)),
                ('markup', models.DecimalField(max_digits=12, decimal_places=4)),
                ('moq_retail', models.DecimalField(max_digits=12, decimal_places=4)),
                ('moq_incremental_retail', models.DecimalField(max_digits=12, decimal_places=4)),
                ('moq_enterprise', models.DecimalField(max_digits=12, decimal_places=4)),
                ('moq_increment_enterprise', models.DecimalField(max_digits=12, decimal_places=4)),
                ('dispatch_location', models.TextField()),
                ('vat', models.DecimalField(max_digits=12, decimal_places=4)),
                ('shipping_charge', models.DecimalField(max_digits=12, decimal_places=4)),
                ('stock_status', models.IntegerField()),
                ('price_validity', models.DateTimeField(blank=True, null=True)),
                ('shipment_mode', models.TextField(blank=True, null=True)),
                ('is_cancelable', models.IntegerField(blank=True, null=True)),
                ('is_cod', models.IntegerField(blank=True, null=True)),
                ('is_returnable', models.IntegerField(blank=True, null=True)),
                ('processing_time', models.TextField(blank=True, null=True)),
                ('conforming_standard', models.TextField(blank=True, null=True)),
                ('warranty', models.TextField(blank=True, null=True)),
                ('item_buying_type', models.CharField(blank=True, max_length=255, null=True)),
                ('publish', models.IntegerField()),
                ('secondary_store_price', models.DecimalField(max_digits=12, decimal_places=2)),
                ('moq_enterprise_price', models.DecimalField(max_digits=12, decimal_places=4)),
                ('moq_sme', models.DecimalField(max_digits=12, decimal_places=4)),
                ('moq_sme_price', models.CharField(max_length=100)),
                ('moq_increment_sme', models.DecimalField(max_digits=12, decimal_places=4)),
                ('max_sme_quantity', models.DecimalField(blank=True, max_digits=12, decimal_places=4, null=True)),
                ('moq_max_sme', models.DecimalField(max_digits=12, decimal_places=4)),
            ],
            options={
                'db_table': 'store_price_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StoreProductMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('subscribed_product_id', models.IntegerField(blank=True, null=True)),
                ('store_id', models.IntegerField(blank=True, null=True)),
                ('base_product_id', models.IntegerField(blank=True, null=True)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('expired_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'store_product_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubscribedProduct',
            fields=[
                ('subscribed_product_id', models.AutoField(serialize=False, primary_key=True)),
                ('base_product_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField()),
                ('is_deleted', models.SmallIntegerField()),
                ('sku', models.CharField(max_length=128)),
                ('quantity', models.IntegerField()),
                ('thumb_url', models.TextField(blank=True, null=True)),
                ('base_ref_id', models.CharField(blank=True, max_length=200, null=True)),
                ('subscribed_ref_id', models.CharField(blank=True, max_length=200, null=True)),
                ('standard_packing_quantity', models.CharField(blank=True, max_length=255, null=True)),
                ('installation_price', models.DecimalField(blank=True, max_digits=12, decimal_places=4, null=True)),
                ('installation_sow', models.TextField(blank=True, null=True)),
                ('installation_with_material_price', models.DecimalField(blank=True, max_digits=12, decimal_places=4, null=True)),
                ('installation_with_material_sow', models.TextField(blank=True, null=True)),
                ('combo', models.TextField(blank=True, null=True)),
                ('specifications', models.TextField(blank=True, null=True)),
                ('installation_moq', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'subscribed_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SupplifiedMasterimportupload',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('file_name', models.CharField(max_length=500)),
                ('process_name', models.CharField(max_length=300)),
                ('process_type', models.CharField(max_length=50)),
                ('uploaded_on', models.DateTimeField(blank=True, null=True)),
                ('applied_on', models.DateTimeField(blank=True, null=True)),
                ('query', models.TextField(blank=True, null=True)),
                ('error', models.TextField(blank=True, null=True)),
                ('applied', models.IntegerField()),
                ('discarded_on', models.DateTimeField(blank=True, null=True)),
                ('ref_text', models.CharField(blank=True, max_length=500, null=True)),
                ('applied_on_production', models.IntegerField()),
                ('file_path', models.CharField(blank=True, max_length=100, null=True)),
                ('download_query', models.TextField(blank=True, null=True)),
                ('applied_on_production_time', models.DateTimeField(blank=True, null=True)),
                ('sql_error', models.TextField(blank=True, null=True)),
                ('sync_errors', models.TextField(blank=True, null=True)),
                ('sync_query', models.TextField(blank=True, null=True)),
                ('master_category_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'supplified_masterimportupload',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SyncLog',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('last_sync_date', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'sync_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaxMaster',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('category_id', models.IntegerField()),
                ('getit_category_id', models.IntegerField()),
                ('category_name', models.CharField(max_length=255)),
                ('parent_category_id', models.IntegerField()),
                ('level', models.IntegerField()),
                ('path', models.CharField(max_length=255)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.SmallIntegerField()),
                ('is_mega_category', models.SmallIntegerField()),
                ('category_shipping_charge', models.IntegerField()),
                ('status', models.IntegerField()),
                ('cat_tax_per', models.DecimalField(max_digits=5, decimal_places=2)),
            ],
            options={
                'db_table': 'tax_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TempBp',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('base_product_id', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('small_description', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('unit_of_measurement_one', models.CharField(blank=True, max_length=150, null=True)),
                ('model_number', models.CharField(blank=True, max_length=255, null=True)),
                ('key_features', models.TextField(blank=True, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=150, null=True)),
                ('meta_keyword', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=150, null=True)),
                ('status', models.IntegerField()),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('video_url', models.CharField(blank=True, max_length=255, null=True)),
                ('brand_id', models.IntegerField()),
                ('unit_of_measurement_two', models.CharField(blank=True, max_length=150, null=True)),
                ('is_no_follow', models.IntegerField(blank=True, null=True)),
                ('thumb_url', models.CharField(blank=True, max_length=500, null=True)),
                ('base_ref_id', models.CharField(blank=True, max_length=10, null=True)),
                ('slug', models.TextField(blank=True, null=True)),
                ('default_category', models.IntegerField()),
                ('combo_categories', models.CharField(blank=True, max_length=255, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('is_installation_required', models.IntegerField()),
                ('installation_amount', models.DecimalField(blank=True, max_digits=12, decimal_places=2, null=True)),
                ('installation_moq', models.IntegerField(blank=True, null=True)),
                ('installation_unit_of_measurement', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_text', models.TextField(blank=True, null=True)),
                ('extra_material_required', models.IntegerField()),
                ('extra_material_price', models.DecimalField(blank=True, max_digits=12, decimal_places=4, null=True)),
                ('business_unit', models.TextField(blank=True, null=True)),
                ('sub_category', models.CharField(blank=True, max_length=255, null=True)),
                ('brand_type', models.CharField(blank=True, max_length=255, null=True)),
                ('standard_packing_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('unit_quantity_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('purchase_price_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('installation_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('installation_with_material_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('classifications', models.CharField(blank=True, max_length=255, null=True)),
                ('categoryids', models.TextField(blank=True, null=True)),
                ('sub_sub_category', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'temp_bp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestTable',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('store_id', models.IntegerField()),
                ('base_product_id', models.IntegerField()),
                ('subscribed_product_id', models.IntegerField()),
                ('region_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'test_table',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='TestModel',
        ),
    ]
